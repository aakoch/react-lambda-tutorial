{"version":3,"sources":["index.js"],"names":["Square","props","className","isWinner","onClick","value","Board","i","this","squares","winner","includes","cells","rowNum","Array","keys","map","j","renderSquare","rows","state","React","Component","Game","history","fill","stepNumber","xIsNext","step","setState","slice","length","fetch","JSON","stringify","then","res","json","result","concat","status","current","moves","move","desc","jumpTo","handleClick","date","ReactDOM","render","document","getElementById"],"mappings":"4NAIA,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAW,UAAYD,EAAME,SAAW,aAAe,IAAKC,QAASH,EAAMG,QAAnF,SACGH,EAAMI,Q,IAOPC,E,2KAESC,GAAI,IAAD,OACd,OACE,cAACP,EAAD,CAEEK,MAAOG,KAAKP,MAAMQ,QAAQF,GAC1BH,QAAS,kBAAM,EAAKH,MAAMG,QAAQG,IAClCJ,SAAUK,KAAKP,MAAMS,OAAOC,SAASJ,IAHhCA,K,+BAQD,IAAD,OACDK,EAAQ,SAACC,GAAD,OACZ,YAAIC,MAAM,GAAGC,QAAQC,KAAI,SAACC,GAAD,OAAO,EAAKC,aAAuB,EAATL,EAAcI,OAE7DE,EAAO,YAAIL,MAAM,GAAGC,QAAQC,KAAI,SAACH,GAAD,OACpC,qBAAKX,UAAU,YAAf,SACGU,EAAMC,IADuB,MAAQA,MAK1C,OACE,gCACA,8BAAML,KAAKY,QACRD,S,GA1BWE,IAAMC,WAgCpBC,E,kDACJ,WAAYtB,GAAQ,IAAD,8BACjB,cAAMA,IACDmB,MAAQ,CACXI,QAAS,CAAC,CACRf,QAASK,MAAM,GAAGW,KAAK,QAEzBC,WAAY,EACZC,SAAS,GAPM,E,mDAWZC,GACLpB,KAAKqB,SAAS,CACZH,WAAYE,EACZD,QAAUC,EAAO,IAAO,M,kCAIhBrB,GAAI,IAAD,OACPiB,EAAUhB,KAAKY,MAAMI,QAAQM,MAAM,EAAGtB,KAAKY,MAAMM,WAAa,GAE9DjB,EADUe,EAAQA,EAAQO,OAAS,GACjBtB,QAAQqB,QAC5BtB,KAAKY,MAAMV,SAGfD,EAAQF,GAAKC,KAAKY,MAAMO,QAAU,IAAM,IAExCK,MAAM,0FAA4FC,KAAKC,UAAUzB,IAC9G0B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKT,SAAS,CACZL,QAASA,EAAQe,OAAO,CAAC,CACvB9B,QAASA,KAEXiB,WAAYF,EAAQO,OACpBJ,SAAU,EAAKP,MAAMO,QACrBjB,OAAQ4B,U,+BAMR,IAeJE,EAfG,OACDhB,EAAUhB,KAAKY,MAAMI,QACrBiB,EAAUjB,EAAQhB,KAAKY,MAAMM,YAE7BgB,EAAQlB,EAAQR,KAAI,SAACY,EAAMe,GAC/B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACE,6BACE,wBAAQvC,QAAS,kBAAM,EAAKyC,OAAOF,IAAnC,SAA2CC,KADpCD,MAcb,OANEH,EADEhC,KAAKY,MAAMV,OACJ,WAAa+B,EAAQhC,QAAQD,KAAKY,MAAMV,OAAO,IAG/C,iBAAmBF,KAAKY,MAAMO,QAAU,IAAM,KAIvD,sBAAKzB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACI,EAAD,CACEG,QAASgC,EAAQhC,QACjBC,OAAQF,KAAKY,MAAMV,QAAU,GAC7BN,QAAS,SAACG,GAAD,OAAO,EAAKuC,YAAYvC,QAGrC,sBAAKL,UAAU,YAAf,UACE,8BAAMsC,IACN,6BAAKE,OAEP,8BAAMlC,KAAKY,MAAM2B,c,GAhFN1B,IAAMC,WAwFzB0B,IAASC,OACP,cAAC1B,EAAD,IACA2B,SAASC,eAAe,W","file":"static/js/main.fc1490c0.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className={'square' + (props.isWinner ? ' highlight' : '')} onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\n// \n\nclass Board extends React.Component {\n\n  renderSquare(i) {\n    return (\n      <Square \n        key={i}\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n        isWinner={this.props.winner.includes(i)}\n      />\n    );\n  }\n\n  render() {\n    const cells = (rowNum) => \n      [...Array(3).keys()].map((j) => this.renderSquare((rowNum * 3) + j));\n\n    const rows = [...Array(3).keys()].map((rowNum) =>\n      <div className=\"board-row\" key={'row' + rowNum}>\n        {cells(rowNum)}\n      </div>\n    );\n\n    return (\n      <div>\n      <div>{this.state}</div>\n        {rows}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (this.state.winner) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n\n    fetch(\"https://b3ocryhgu0.execute-api.us-east-2.amazonaws.com/default/calculateWinner?squares=\" + JSON.stringify(squares))\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            history: history.concat([{\n              squares: squares,\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n            winner: result\n          });\n        }\n      )\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if (this.state.winner) {\n      status = 'Winner: ' + current.squares[this.state.winner[0]];\n    }\n    else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares}\n            winner={this.state.winner || []}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n        <div>{this.state.date}</div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}